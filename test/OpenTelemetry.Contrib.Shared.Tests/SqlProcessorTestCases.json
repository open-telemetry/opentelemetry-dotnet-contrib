[
  {
      "name": "numeric_literal_integers",
      "sql": "SELECT 12, -12, +12",
      "sanitized": "SELECT ?, ?, ?",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "numeric_literal_with_decimal_point",
      "sql": "SELECT 12.34, -12.34, +12.34, .01, -.01",
      "sanitized": "SELECT ?, ?, ?, ?, ?",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "numeric_literal_exponential",
      "sql": "SELECT 12.34e56, -12.34e56, +12.34e56",
      "sanitized": "SELECT ?, ?, ?",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "numeric_literal_negative_exponential",
      "sql": "SELECT 12.34e-56, -12.34e-56, +12.34e-56",
      "sanitized": "SELECT ?, ?, ?",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "hex_literal",
      "sql": "SELECT 0xDEADBEEF, 0XdeadBEEF",
      "sanitized": "SELECT ?, ?",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "string_literal",
      "sql": "SELECT 'hello'",
      "sanitized": "SELECT ?",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "string_literal_escaped_single_quote",
      "sql": "SELECT 'My name''s not important'",
      "sanitized": "SELECT ?",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "string_with_embedded_newline",
      "sql": "SELECT 'My name is \n not important'",
      "sanitized": "SELECT ?",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "numbers_in_identifiers",
      "sql": "SELECT c3po, r2d2 FROM covid19 WHERE n1h1=1234",
      "sanitized": "SELECT c3po, r2d2 FROM covid19 WHERE n1h1=?",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "periods_in_identifiers",
      "sql": "SELECT a FROM dbo.Table JOIN dbo.AnotherTable",
      "sanitized": "SELECT a FROM dbo.Table JOIN dbo.AnotherTable",
      "dialects": [
          "mssql"
      ]
  },
  {
      "name": "insert_into",
      "sql": "INSERT INTO X VALUES(1, 23456, 123.456, 99+100)",
      "sanitized": "INSERT INTO X VALUES(?, ?, ?, ??)",
      "dialects": [
          "mssql"
      ],
      "comments": [
          "The following may also be acceptable but would require",
          "recognizing expressions",
          "INSERT INTO X VALUES(?, ?, ?, ?+?)"
      ]
  },
  {
      "name": "uuid",
      "sql": "SELECT { guid  '01234567-89ab-cdef-0123-456789abcdef' }",
      "sanitized": "SELECT { guid  ? }",
      "dialects": [
          "mssql"
      ],
      "comments": [
          "The following may be preferable",
          "SELECT ?"
      ]
  },
  {
      "name": "in_clause",
      "sql": "SELECT * FROM table WHERE value IN (123, 456, 'abc')",
      "sanitized": "SELECT * FROM table WHERE value IN (?, ?, ?)",
      "dialects": [
          "mssql"
      ],
      "comments": [
          "The following is allowed by the spec",
          "but not required",
          "SELECT * FROM table WHERE value IN (?)"
      ]
  },
  {
      "name": "comments",
      "sql": "SELECT column -- end of line comment\nFROM /* block \n comment */ table",
      "sanitized": "SELECT column \nFROM  table",
      "dialects": [
          "mssql"
      ]
  }
]
