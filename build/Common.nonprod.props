<Project>
  <Import Project=".\Common.props" />

  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)/OpenTelemetryContrib.test.ruleset</CodeAnalysisRuleSet>
    <NoWarn>$(NoWarn),1574,1591</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>

  <PropertyGroup Condition="$(MSBuildProjectName.Contains('.Tests'))">
    <IsTestProject>true</IsTestProject>
  </PropertyGroup>

  <PropertyGroup Label="Package versions used in by test projects">
    <!--
      Please sort alphabetically.
      Refer to https://docs.microsoft.com/en-us/nuget/concepts/package-versioning for semver syntax.
    -->
    <BenchmarkDotNetPkgVer>[0.13.12,0.14)</BenchmarkDotNetPkgVer>
    <MicrosoftExtensionsHostingPkgVer>8.0.0</MicrosoftExtensionsHostingPkgVer>
    <MicrosoftNETTestSdkPkgVer>[17.11.1,18.0)</MicrosoftNETTestSdkPkgVer>
    <OpenTelemetryExporterInMemoryPkgVer>$(OpenTelemetryCoreLatestVersion)</OpenTelemetryExporterInMemoryPkgVer>
    <OpenTelemetryExporterInMemoryLatestPreReleasePkgVer>$(OpenTelemetryCoreLatestPrereleaseVersion)</OpenTelemetryExporterInMemoryLatestPreReleasePkgVer>
    <SupportedNetTargets>net8.0;net6.0</SupportedNetTargets>
    <XUnitRunnerVisualStudioPkgVer>[2.8.2,3.0)</XUnitRunnerVisualStudioPkgVer>
    <XUnitPkgVer>[2.9.0,3.0)</XUnitPkgVer>
    <WiremockNetPkgVer>[1.6.1,2.0)</WiremockNetPkgVer>
  </PropertyGroup>

  <ItemGroup Condition="'$(IsTestProject)' == 'true'">
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="$(MicrosoftNETTestSdkPkgVer)" />
    <PackageReference Include="xunit" Version="$(XUnitPkgVer)" />
    <PackageReference Include="xunit.runner.visualstudio" Version="$(XUnitRunnerVisualStudioPkgVer)" PrivateAssets="All" />
  </ItemGroup>

  <Target Name="SkipVSTestForInvalidTargetFramework" BeforeTargets="VSTest" Condition="'$(IsTestProject)' == 'true'">
    <!-- Note: When running dotnet test from CLI with the framework parameter
    errors will be generated for projects which do not implement the requested
    target. In order to enable running tests for a given framework across a
    solution/project with mixed targets (eg: dotnet test
    opentelemetry-dotnet-contrib.sln -f net462) we convert this into a skip
    message only. -->
    <PropertyGroup Condition="$(TargetFrameworks.Contains($(TargetFramework))) != 'true'">
      <_SkipTests>true</_SkipTests>
      <IsTestProject>false</IsTestProject>
    </PropertyGroup>

    <Message Importance="high" Text="Skipping test execution for '$(TargetPath)' because it does not contain the '$(TargetFramework)' target." Condition="'$(_SkipTests)' == 'true'" />
  </Target>

</Project>
