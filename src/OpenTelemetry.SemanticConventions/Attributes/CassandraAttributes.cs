// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// <auto-generated>This file has been auto generated from 'src\OpenTelemetry.SemanticConventions\scripts\templates\registry\SemanticConventionsAttributes.cs.j2' </auto-generated>

#nullable enable

#pragma warning disable CS1570 // XML comment has badly formed XML

namespace OpenTelemetry.SemanticConventions;

/// <summary>
/// Constants for semantic attribute names outlined by the OpenTelemetry specifications.
/// </summary>
public static class CassandraAttributes
{
    /// <summary>
    /// The consistency level of the query. Based on consistency values from <a href="https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html">CQL</a>.
    /// </summary>
    public const string AttributeCassandraConsistencyLevel = "cassandra.consistency.level";

    /// <summary>
    /// The data center of the coordinating node for a query.
    /// </summary>
    public const string AttributeCassandraCoordinatorDc = "cassandra.coordinator.dc";

    /// <summary>
    /// The ID of the coordinating node for a query.
    /// </summary>
    public const string AttributeCassandraCoordinatorId = "cassandra.coordinator.id";

    /// <summary>
    /// The fetch size used for paging, i.e. how many rows will be returned at once.
    /// </summary>
    public const string AttributeCassandraPageSize = "cassandra.page.size";

    /// <summary>
    /// Whether or not the query is idempotent.
    /// </summary>
    public const string AttributeCassandraQueryIdempotent = "cassandra.query.idempotent";

    /// <summary>
    /// The number of times a query was speculatively executed. Not set or <c>0</c> if the query was not executed speculatively.
    /// </summary>
    public const string AttributeCassandraSpeculativeExecutionCount = "cassandra.speculative_execution.count";

    /// <summary>
    /// The consistency level of the query. Based on consistency values from <a href="https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html">CQL</a>.
    /// </summary>
    public static class CassandraConsistencyLevelValues
    {
        /// <summary>
        /// All.
        /// </summary>
        public const string All = "all";

        /// <summary>
        /// Each Quorum.
        /// </summary>
        public const string EachQuorum = "each_quorum";

        /// <summary>
        /// Quorum.
        /// </summary>
        public const string Quorum = "quorum";

        /// <summary>
        /// Local Quorum.
        /// </summary>
        public const string LocalQuorum = "local_quorum";

        /// <summary>
        /// One.
        /// </summary>
        public const string One = "one";

        /// <summary>
        /// Two.
        /// </summary>
        public const string Two = "two";

        /// <summary>
        /// Three.
        /// </summary>
        public const string Three = "three";

        /// <summary>
        /// Local One.
        /// </summary>
        public const string LocalOne = "local_one";

        /// <summary>
        /// Any.
        /// </summary>
        public const string Any = "any";

        /// <summary>
        /// Serial.
        /// </summary>
        public const string Serial = "serial";

        /// <summary>
        /// Local Serial.
        /// </summary>
        public const string LocalSerial = "local_serial";
    }
}
