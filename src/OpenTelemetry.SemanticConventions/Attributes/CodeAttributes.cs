// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// <auto-generated>This file has been auto generated from 'src\OpenTelemetry.SemanticConventions\scripts\templates\registry\SemanticConventionsAttributes.cs.j2' </auto-generated>

#nullable enable

#pragma warning disable CS1570 // XML comment has badly formed XML

namespace OpenTelemetry.SemanticConventions;

/// <summary>
/// Constants for semantic attribute names outlined by the OpenTelemetry specifications.
/// </summary>
public static class CodeAttributes
{
    /// <summary>
    /// Deprecated, use <c>code.column.number</c>.
    /// </summary>
    [Obsolete("Replaced by <c>code.column.number</c>.")]
    public const string AttributeCodeColumn = "code.column";

    /// <summary>
    /// The column number in <c>code.file.path</c> best representing the operation. It SHOULD point within the code unit named in <c>code.function.name</c>. This attribute MUST NOT be used on the Profile signal since the data is already captured in 'message Line'. This constraint is imposed to prevent redundancy and maintain data integrity.
    /// </summary>
    public const string AttributeCodeColumnNumber = "code.column.number";

    /// <summary>
    /// The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path). This attribute MUST NOT be used on the Profile signal since the data is already captured in 'message Function'. This constraint is imposed to prevent redundancy and maintain data integrity.
    /// </summary>
    public const string AttributeCodeFilePath = "code.file.path";

    /// <summary>
    /// Deprecated, use <c>code.file.path</c> instead.
    /// </summary>
    [Obsolete("Replaced by <c>code.file.path</c>.")]
    public const string AttributeCodeFilepath = "code.filepath";

    /// <summary>
    /// Deprecated, use <c>code.function.name</c> instead.
    /// </summary>
    [Obsolete("Value should be included in <c>code.function.name</c> which is expected to be a fully-qualified name.")]
    public const string AttributeCodeFunction = "code.function";

    /// <summary>
    /// The method or function fully-qualified name without arguments. The value should fit the natural representation of the language runtime, which is also likely the same used within <c>code.stacktrace</c> attribute value. This attribute MUST NOT be used on the Profile signal since the data is already captured in 'message Function'. This constraint is imposed to prevent redundancy and maintain data integrity.
    /// </summary>
    /// <remarks>
    /// Values and format depends on each language runtime, thus it is impossible to provide an exhaustive list of examples.
    /// The values are usually the same (or prefixes of) the ones found in native stack trace representation stored in
    /// <c>code.stacktrace</c> without information on arguments.
    /// <p>
    /// Examples:
    /// <ul>
    ///   <li>Java method: <c>com.example.MyHttpService.serveRequest</c></li>
    ///   <li>Java anonymous class method: <c>com.mycompany.Main$1.myMethod</c></li>
    ///   <li>Java lambda method: <c>com.mycompany.Main$$Lambda/0x0000748ae4149c00.myMethod</c></li>
    ///   <li>PHP function: <c>GuzzleHttp\Client::transfer</c></li>
    ///   <li>Go function: <c>github.com/my/repo/pkg.foo.func5</c></li>
    ///   <li>Elixir: <c>OpenTelemetry.Ctx.new</c></li>
    ///   <li>Erlang: <c>opentelemetry_ctx:new</c></li>
    ///   <li>Rust: <c>playground::my_module::my_cool_func</c></li>
    ///   <li>C function: <c>fopen</c>.</li>
    /// </ul>
    /// </remarks>
    public const string AttributeCodeFunctionName = "code.function.name";

    /// <summary>
    /// The line number in <c>code.file.path</c> best representing the operation. It SHOULD point within the code unit named in <c>code.function.name</c>. This attribute MUST NOT be used on the Profile signal since the data is already captured in 'message Line'. This constraint is imposed to prevent redundancy and maintain data integrity.
    /// </summary>
    public const string AttributeCodeLineNumber = "code.line.number";

    /// <summary>
    /// Deprecated, use <c>code.line.number</c> instead.
    /// </summary>
    [Obsolete("Replaced by <c>code.line.number</c>.")]
    public const string AttributeCodeLineno = "code.lineno";

    /// <summary>
    /// Deprecated, namespace is now included into <c>code.function.name</c>.
    /// </summary>
    [Obsolete("Value should be included in <c>code.function.name</c> which is expected to be a fully-qualified name.")]
    public const string AttributeCodeNamespace = "code.namespace";

    /// <summary>
    /// A stacktrace as a string in the natural representation for the language runtime. The representation is identical to <a href="/docs/exceptions/exceptions-spans.md#stacktrace-representation"><c>exception.stacktrace</c></a>. This attribute MUST NOT be used on the Profile signal since the data is already captured in 'message Location'. This constraint is imposed to prevent redundancy and maintain data integrity.
    /// </summary>
    public const string AttributeCodeStacktrace = "code.stacktrace";
}
