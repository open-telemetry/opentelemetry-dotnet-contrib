// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// <auto-generated>This file has been auto generated from 'src\OpenTelemetry.SemanticConventions\scripts\templates\registry\SemanticConventionsAttributes.cs.j2' </auto-generated>

#nullable enable

#pragma warning disable CS1570 // XML comment has badly formed XML

namespace OpenTelemetry.SemanticConventions;

/// <summary>
/// Constants for semantic attribute names outlined by the OpenTelemetry specifications.
/// </summary>
public static class CicdAttributes
{
    /// <summary>
    /// The kind of action a pipeline run is performing.
    /// </summary>
    public const string AttributeCicdPipelineActionName = "cicd.pipeline.action.name";

    /// <summary>
    /// The human readable name of the pipeline within a CI/CD system.
    /// </summary>
    public const string AttributeCicdPipelineName = "cicd.pipeline.name";

    /// <summary>
    /// The result of a pipeline run.
    /// </summary>
    public const string AttributeCicdPipelineResult = "cicd.pipeline.result";

    /// <summary>
    /// The unique identifier of a pipeline run within a CI/CD system.
    /// </summary>
    public const string AttributeCicdPipelineRunId = "cicd.pipeline.run.id";

    /// <summary>
    /// The pipeline run goes through these states during its lifecycle.
    /// </summary>
    public const string AttributeCicdPipelineRunState = "cicd.pipeline.run.state";

    /// <summary>
    /// The <a href="https://wikipedia.org/wiki/URL">URL</a> of the pipeline run, providing the complete address in order to locate and identify the pipeline run.
    /// </summary>
    public const string AttributeCicdPipelineRunUrlFull = "cicd.pipeline.run.url.full";

    /// <summary>
    /// The human readable name of a task within a pipeline. Task here most closely aligns with a <a href="https://wikipedia.org/wiki/Pipeline_(computing)">computing process</a> in a pipeline. Other terms for tasks include commands, steps, and procedures.
    /// </summary>
    public const string AttributeCicdPipelineTaskName = "cicd.pipeline.task.name";

    /// <summary>
    /// The unique identifier of a task run within a pipeline.
    /// </summary>
    public const string AttributeCicdPipelineTaskRunId = "cicd.pipeline.task.run.id";

    /// <summary>
    /// The result of a task run.
    /// </summary>
    public const string AttributeCicdPipelineTaskRunResult = "cicd.pipeline.task.run.result";

    /// <summary>
    /// The <a href="https://wikipedia.org/wiki/URL">URL</a> of the pipeline task run, providing the complete address in order to locate and identify the pipeline task run.
    /// </summary>
    public const string AttributeCicdPipelineTaskRunUrlFull = "cicd.pipeline.task.run.url.full";

    /// <summary>
    /// The type of the task within a pipeline.
    /// </summary>
    public const string AttributeCicdPipelineTaskType = "cicd.pipeline.task.type";

    /// <summary>
    /// The name of a component of the CICD system.
    /// </summary>
    public const string AttributeCicdSystemComponent = "cicd.system.component";

    /// <summary>
    /// The unique identifier of a worker within a CICD system.
    /// </summary>
    public const string AttributeCicdWorkerId = "cicd.worker.id";

    /// <summary>
    /// The name of a worker within a CICD system.
    /// </summary>
    public const string AttributeCicdWorkerName = "cicd.worker.name";

    /// <summary>
    /// The state of a CICD worker / agent.
    /// </summary>
    public const string AttributeCicdWorkerState = "cicd.worker.state";

    /// <summary>
    /// The <a href="https://wikipedia.org/wiki/URL">URL</a> of the worker, providing the complete address in order to locate and identify the worker.
    /// </summary>
    public const string AttributeCicdWorkerUrlFull = "cicd.worker.url.full";

    /// <summary>
    /// The kind of action a pipeline run is performing.
    /// </summary>
    public static class CicdPipelineActionNameValues
    {
        /// <summary>
        /// The pipeline run is executing a build.
        /// </summary>
        public const string Build = "BUILD";

        /// <summary>
        /// The pipeline run is executing.
        /// </summary>
        public const string Run = "RUN";

        /// <summary>
        /// The pipeline run is executing a sync.
        /// </summary>
        public const string Sync = "SYNC";
    }

    /// <summary>
    /// The result of a pipeline run.
    /// </summary>
    public static class CicdPipelineResultValues
    {
        /// <summary>
        /// The pipeline run finished successfully.
        /// </summary>
        public const string Success = "success";

        /// <summary>
        /// The pipeline run did not finish successfully, eg. due to a compile error or a failing test. Such failures are usually detected by non-zero exit codes of the tools executed in the pipeline run.
        /// </summary>
        public const string Failure = "failure";

        /// <summary>
        /// The pipeline run failed due to an error in the CICD system, eg. due to the worker being killed.
        /// </summary>
        public const string Error = "error";

        /// <summary>
        /// A timeout caused the pipeline run to be interrupted.
        /// </summary>
        public const string Timeout = "timeout";

        /// <summary>
        /// The pipeline run was cancelled, eg. by a user manually cancelling the pipeline run.
        /// </summary>
        public const string Cancellation = "cancellation";

        /// <summary>
        /// The pipeline run was skipped, eg. due to a precondition not being met.
        /// </summary>
        public const string Skip = "skip";
    }

    /// <summary>
    /// The pipeline run goes through these states during its lifecycle.
    /// </summary>
    public static class CicdPipelineRunStateValues
    {
        /// <summary>
        /// The run pending state spans from the event triggering the pipeline run until the execution of the run starts (eg. time spent in a queue, provisioning agents, creating run resources).
        /// </summary>
        public const string Pending = "pending";

        /// <summary>
        /// The executing state spans the execution of any run tasks (eg. build, test).
        /// </summary>
        public const string Executing = "executing";

        /// <summary>
        /// The finalizing state spans from when the run has finished executing (eg. cleanup of run resources).
        /// </summary>
        public const string Finalizing = "finalizing";
    }

    /// <summary>
    /// The result of a task run.
    /// </summary>
    public static class CicdPipelineTaskRunResultValues
    {
        /// <summary>
        /// The task run finished successfully.
        /// </summary>
        public const string Success = "success";

        /// <summary>
        /// The task run did not finish successfully, eg. due to a compile error or a failing test. Such failures are usually detected by non-zero exit codes of the tools executed in the task run.
        /// </summary>
        public const string Failure = "failure";

        /// <summary>
        /// The task run failed due to an error in the CICD system, eg. due to the worker being killed.
        /// </summary>
        public const string Error = "error";

        /// <summary>
        /// A timeout caused the task run to be interrupted.
        /// </summary>
        public const string Timeout = "timeout";

        /// <summary>
        /// The task run was cancelled, eg. by a user manually cancelling the task run.
        /// </summary>
        public const string Cancellation = "cancellation";

        /// <summary>
        /// The task run was skipped, eg. due to a precondition not being met.
        /// </summary>
        public const string Skip = "skip";
    }

    /// <summary>
    /// The type of the task within a pipeline.
    /// </summary>
    public static class CicdPipelineTaskTypeValues
    {
        /// <summary>
        /// build.
        /// </summary>
        public const string Build = "build";

        /// <summary>
        /// test.
        /// </summary>
        public const string Test = "test";

        /// <summary>
        /// deploy.
        /// </summary>
        public const string Deploy = "deploy";
    }

    /// <summary>
    /// The state of a CICD worker / agent.
    /// </summary>
    public static class CicdWorkerStateValues
    {
        /// <summary>
        /// The worker is not performing work for the CICD system. It is available to the CICD system to perform work on (online / idle).
        /// </summary>
        public const string Available = "available";

        /// <summary>
        /// The worker is performing work for the CICD system.
        /// </summary>
        public const string Busy = "busy";

        /// <summary>
        /// The worker is not available to the CICD system (disconnected / down).
        /// </summary>
        public const string Offline = "offline";
    }
}
