// <copyright file="LogsSemanticConventions.cs" company="OpenTelemetry Authors">
// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>

// <auto-generated> This file has been auto generated from buildscripts/semantic-conventions/templates/SemanticConventions.cs.j2</auto-generated>

namespace OpenTelemetry.Logs
{
    /// <summary>
    /// Constants for semantic attribute names outlined by the OpenTelemetry specifications.
    /// </summary>
    /// <remarks>
    /// Schema and specification version: https://opentelemetry.io/schemas/1.13.0.
    /// </remarks>
    public static class LogsSemanticConventions
    {
        /// <summary>
        /// The name identifies the event.
        /// </summary>
        public const string AttributeEventName = "event.name";

        /// <summary>
        /// The domain identifies the context in which an event happened. An event name is unique only within a domain.
        /// </summary>
        /// <remarks>
        /// An <c>event.name</c> is supposed to be unique only in the context of an
        /// <c>event.domain</c>, so this allows for two events in different domains to
        /// have same <c>event.name</c>, yet be unrelated events.
        /// </remarks>
        public const string AttributeEventDomain = "event.domain";

        /// <summary>
        /// Prefix for 'event'.
        /// </summary>
        public static readonly string PrefixEvent = "event";

        /// <summary>
        /// The domain identifies the context in which an event happened. An event name is unique only within a domain.
        /// </summary>
        public static class EventDomainValues
        {
            /// <summary>
            /// Events from browser apps.
            /// </summary>
            public const string Browser = "browser";

            /// <summary>
            /// Events from mobile apps.
            /// </summary>
            public const string Device = "device";

            /// <summary>
            /// Events from Kubernetes.
            /// </summary>
            public const string K8s = "k8s";
        }
    }
}
