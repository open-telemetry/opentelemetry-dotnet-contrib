OpenTelemetry.Exporter.OneCollector.OneCollectorExporter<T>
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterOptions
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterOptions.ConnectionString.get -> string?
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterOptions.ConnectionString.set -> void
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterOptions.TransportOptions.get -> OpenTelemetry.Exporter.OneCollector.OneCollectorExporterTransportOptions!
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterTransportOptions
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterTransportOptions.Endpoint.get -> System.Uri!
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterTransportOptions.Endpoint.set -> void
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterValidationException
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterValidationException.OneCollectorExporterValidationException() -> void
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterValidationException.OneCollectorExporterValidationException(string! message) -> void
OpenTelemetry.Exporter.OneCollector.OneCollectorExporterValidationException.OneCollectorExporterValidationException(string! message, System.Exception? innerException) -> void
OpenTelemetry.Exporter.OneCollector.OneCollectorLogExporter
OpenTelemetry.Exporter.OneCollector.OneCollectorLogExporter.OneCollectorLogExporter(OpenTelemetry.Exporter.OneCollector.OneCollectorLogExporterOptions! options) -> void
OpenTelemetry.Exporter.OneCollector.OneCollectorLogExporterOptions
OpenTelemetry.Exporter.OneCollector.OneCollectorLogExporterOptions.BatchOptions.get -> OpenTelemetry.BatchExportProcessorOptions<OpenTelemetry.Logs.LogRecord!>!
OpenTelemetry.Exporter.OneCollector.OneCollectorLogExporterOptions.DefaultEventName.get -> string!
OpenTelemetry.Exporter.OneCollector.OneCollectorLogExporterOptions.DefaultEventName.set -> void
OpenTelemetry.Exporter.OneCollector.OneCollectorLogExporterOptions.OneCollectorLogExporterOptions() -> void
OpenTelemetry.Logs.OneCollectorLogExporterBuilder
OpenTelemetry.Logs.OneCollectorLogExporterBuilder.ConfigureBatchOptions(System.Action<OpenTelemetry.BatchExportProcessorOptions<OpenTelemetry.Logs.LogRecord!>!>! configure) -> OpenTelemetry.Logs.OneCollectorLogExporterBuilder!
OpenTelemetry.Logs.OneCollectorLogExporterBuilder.ConfigureTransportOptions(System.Action<OpenTelemetry.Exporter.OneCollector.OneCollectorExporterTransportOptions!>! configure) -> OpenTelemetry.Logs.OneCollectorLogExporterBuilder!
OpenTelemetry.Logs.OneCollectorLogExporterBuilder.SetConnectionString(string! connectionString) -> OpenTelemetry.Logs.OneCollectorLogExporterBuilder!
OpenTelemetry.Logs.OneCollectorLogExporterBuilder.SetDefaultEventName(string! defaultEventName) -> OpenTelemetry.Logs.OneCollectorLogExporterBuilder!
OpenTelemetry.Logs.OneCollectorOpenTelemetryLoggerOptionsExtensions
override sealed OpenTelemetry.Exporter.OneCollector.OneCollectorExporter<T>.Export(in OpenTelemetry.Batch<T!> batch) -> OpenTelemetry.ExportResult
static OpenTelemetry.Logs.OneCollectorOpenTelemetryLoggerOptionsExtensions.AddOneCollectorExporter(this OpenTelemetry.Logs.OpenTelemetryLoggerOptions! options, Microsoft.Extensions.Configuration.IConfiguration! configuration) -> OpenTelemetry.Logs.OpenTelemetryLoggerOptions!
static OpenTelemetry.Logs.OneCollectorOpenTelemetryLoggerOptionsExtensions.AddOneCollectorExporter(this OpenTelemetry.Logs.OpenTelemetryLoggerOptions! options, Microsoft.Extensions.Configuration.IConfiguration! configuration, System.Action<OpenTelemetry.Logs.OneCollectorLogExporterBuilder!>! configure) -> OpenTelemetry.Logs.OpenTelemetryLoggerOptions!
static OpenTelemetry.Logs.OneCollectorOpenTelemetryLoggerOptionsExtensions.AddOneCollectorExporter(this OpenTelemetry.Logs.OpenTelemetryLoggerOptions! options, string! connectionString) -> OpenTelemetry.Logs.OpenTelemetryLoggerOptions!
static OpenTelemetry.Logs.OneCollectorOpenTelemetryLoggerOptionsExtensions.AddOneCollectorExporter(this OpenTelemetry.Logs.OpenTelemetryLoggerOptions! options, string! connectionString, System.Action<OpenTelemetry.Logs.OneCollectorLogExporterBuilder!>! configure) -> OpenTelemetry.Logs.OpenTelemetryLoggerOptions!
static OpenTelemetry.Logs.OneCollectorOpenTelemetryLoggerOptionsExtensions.AddOneCollectorExporter(this OpenTelemetry.Logs.OpenTelemetryLoggerOptions! options, System.Action<OpenTelemetry.Logs.OneCollectorLogExporterBuilder!>! configure) -> OpenTelemetry.Logs.OpenTelemetryLoggerOptions!
