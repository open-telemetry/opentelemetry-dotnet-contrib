name: Build Component

on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      code-cov-name:
        required: true
        type: string
      code-cov-prefix:
        default: 'unittests'
        required: false
        type: string
      os-list:
        default: '[ "windows-latest", "ubuntu-latest" ]'
        required: false
        type: string
      tfm-list:
        default: '[ "net462", "net6.0", "net7.0", "net8.0" ]'
        required: false
        type: string

jobs:
  build-test:

    strategy:
      fail-fast: false # ensures the entire test matrix is run, even if one permutation fails
      matrix:
        os: ${{ fromJSON(inputs.os-list) }}
        version: ${{ fromJSON(inputs.tfm-list) }}
        exclude:
        - os: ubuntu-latest
          version: net462

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        # Note: By default GitHub only fetches 1 commit. MinVer needs to find
        # the version tag which is typically NOT on the first commit so we
        # retrieve them all.
        fetch-depth: 0

    - name: Resolve project
      id: resolve-project
      shell: pwsh
      run: |
        Import-Module .\build\scripts\build.psm1

        # Note: inputs.project-name is either a .proj file or
        # Component[component_name]. The ResolveProject call here parses
        # inputs.project-name into variables we need for build.

        $title = '' # Used for friendly names in action UI
        $project = '' # Actual project passed to dotnet
        $component = '' # Used to tell Component.proj what to build

        ResolveProject `
          -projectNameOrComponentData '${{ inputs.project-name }}' `
          -title ([ref]$title) `
          -project ([ref]$project) `
          -component ([ref]$component)

        echo "title=$title" >> $env:GITHUB_OUTPUT
        echo "project=$project" >> $env:GITHUB_OUTPUT

        # Note: BUILD_COMPONENT envvar tells Component.proj what to build. Only
        # used if $project ends up Component.proj.
        echo "BUILD_COMPONENT=$component" >> $env:GITHUB_ENV

    - name: Setup dotnet
      uses: actions/setup-dotnet@v4

    - name: dotnet restore ${{ steps.resolve-project.outputs.title }}
      run: dotnet restore ${{ steps.resolve-project.outputs.project }} -p:EnablePackageValidation=true

    - name: dotnet build ${{ steps.resolve-project.outputs.title }}
      run: dotnet build ${{ steps.resolve-project.outputs.project }} --configuration Release --no-restore

    - name: dotnet test ${{ steps.resolve-project.outputs.title }}
      run: dotnet test ${{ steps.resolve-project.outputs.project }} --collect:"Code Coverage" --results-directory:TestResults --framework ${{ matrix.version }} --configuration Release --no-restore --no-build --logger:"console;verbosity=detailed" -- RunConfiguration.DisableAppDomain=true

    - name: dotnet pack ${{ steps.resolve-project.outputs.title }}
      if: ${{ matrix.os == 'windows-latest' }}
      run: dotnet pack ${{ steps.resolve-project.outputs.project }} --configuration Release --no-restore --no-build -p:EnablePackageValidation=true

    - name: Install coverage tool
      run: dotnet tool install -g dotnet-coverage

    - name: Merging test results
      if: ${{ hashFiles('./TestResults/**/*.coverage') != '' }}
      run: dotnet-coverage merge -f cobertura -o ./TestResults/Cobertura.xml ./TestResults/**/*.coverage

    - name: Upload code coverage ${{ inputs.code-cov-prefix }}-${{ inputs.code-cov-name }}
      if: ${{ hashFiles('./TestResults/Cobertura.xml') != '' }}
      uses: codecov/codecov-action@v4
      continue-on-error: true # Note: Don't fail for upload failures
      env:
        OS: ${{ matrix.os }}
        TFM: ${{ matrix.version }}
        token: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: TestResults/Cobertura.xml
        env_vars: OS,TFM
        flags: ${{ inputs.code-cov-prefix }}-${{ inputs.code-cov-name }}
        name: Code Coverage for ${{ inputs.code-cov-prefix }}-${{ inputs.code-cov-name }} on [${{ matrix.os }}.${{ matrix.version }}]
        codecov_yml_path: .github/codecov.yml
