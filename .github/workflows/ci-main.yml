name: Main Branch CI

on:
  push:
    branches: [ 'main' ]
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/**'
      - 'build/docker-compose*.yml'
      - 'build/RELEASING.md'
      - 'build/yamllint-requirements.txt'

jobs:
  detect-changes:
    runs-on: windows-latest
    outputs:
      changes: ${{ steps.changes.outputs.changes }}
    steps:
    - uses: AurorNZ/paths-filter@3b1f3abc3371cca888d8eb03dfa70bc8a9867629 # v4.0.0
      id: changes
      with:
        filters: |
          shared: ['src/Shared/**', 'test/Shared/**']
          contrib-shared-tests: ['test/OpenTelemetry.Contrib.Shared.Tests/**']
          code: ['**.cs', '**.csproj', '.editorconfig']
          exporter-geneva: ['*/OpenTelemetry.Exporter.Geneva*/**', '!**/*.md']
          exporter-influxdb: ['*/OpenTelemetry.Exporter.InfluxDB*/**', '!**/*.md']
          exporter-instana: ['*/OpenTelemetry.Exporter.Instana*/**', '!**/*.md']
          exporter-onecollector: ['*/OpenTelemetry.Exporter.OneCollector*/**', '!**/*.md']
          exporter-stackdriver: ['*/OpenTelemetry.Exporter.Stackdriver*/**', '!**/*.md']
          extensions: ['*/OpenTelemetry.Extensions/**', '*/OpenTelemetry.Extensions.Tests/**', '!**/*.md']
          extensions-enrichment: ['*/OpenTelemetry.Extensions.Enrichment*/**', '!**/*.md']
          instrumentation-aspnet: ['*/OpenTelemetry.Instrumentation.AspNet/**', '*/OpenTelemetry.Instrumentation.AspNet.Tests/**', '*/OpenTelemetry.Instrumentation.OpenTelemetry.Instrumentation.AspNet.TelemetryHttpModule.*/**', 'examples/AspNet/**', '!**/*.md']
          instrumentation-aspnetcore: ['*/OpenTelemetry.Instrumentation.AspNetCore*/**', '!**/*.md']
          instrumentation-aws: ['*/OpenTelemetry.Extensions.AWS*/**', '*/OpenTelemetry.Instrumentation.AWS*/**', '!**/*.md']
          instrumentation-cassandra: ['*/OpenTelemetry.Instrumentation.Cassandra*/**', '!**/*.md']
          instrumentation-confluentkafka: ['*/OpenTelemetry.Instrumentation.ConfluentKafka*/**', 'examples/kafka/**', '!**/*.md']
          instrumentation-elasticsearchclient: ['*/OpenTelemetry.Instrumentation.ElasticsearchClient*/**', '!**/*.md']
          instrumentation-entityframeworkcore: ['*/OpenTelemetry.Instrumentation.EntityFrameworkCore*/**', '!**/*.md']
          instrumentation-eventcounters: ['*/OpenTelemetry.Instrumentation.EventCounters*/**', 'examples/event-counters/**', '!**/*.md']
          instrumentation-grpccore: ['*/OpenTelemetry.Instrumentation.GrpcCore*/**', '!**/*.md']
          instrumentation-grpcnetclient: ['*/OpenTelemetry.Instrumentation.GrpcNetClient*/**', '!**/*.md']
          instrumentation-hangfire: ['*/OpenTelemetry.Instrumentation.Hangfire*/**', '!**/*.md']
          instrumentation-http: ['*/OpenTelemetry.Instrumentation.Http*/**', '!**/*.md']
          instrumentation-owin: ['*/OpenTelemetry.Instrumentation.Owin*/**', 'examples/owin/**', '!**/*.md']
          instrumentation-process: ['*/OpenTelemetry.Instrumentation.Process*/**', 'examples/process-instrumentation/**', '!**/*.md']
          instrumentation-quartz: ['*/OpenTelemetry.Instrumentation.Quartz*/**', '!**/*.md']
          instrumentation-runtime: ['*/OpenTelemetry.Instrumentation.Runtime*/**', 'examples/runtime-instrumentation/**', '!**/*.md']
          instrumentation-servicefabricremoting: ['*/OpenTelemetry.Instrumentation.ServiceFabricRemoting*/**', '!**/*.md']
          instrumentation-sqlclient: ['*/OpenTelemetry.Instrumentation.SqlClient*/**', '!**/*.md']
          instrumentation-stackexchangeredis: ['*/OpenTelemetry.Instrumentation.StackExchangeRedis*/**', '!**/*.md']
          instrumentation-wcf: ['*/OpenTelemetry.Instrumentation.Wcf*/**', '!**/*.md']
          persistentstorage: ['*/OpenTelemetry.PersistentStorage*/**', '!**/*.md']
          resources-aws: ['*/OpenTelemetry.Resources.AWS*/**', '!**/*.md']
          resources-azure: ['*/OpenTelemetry.Resources.Azure*/**', '!**/*.md']
          resources-container: ['*/OpenTelemetry.Resources.Container*/**', '!**/*.md']
          resources-gcp: ['*/OpenTelemetry.Resources.Gcp*/**', '!**/*.md']
          resources-host: ['*/OpenTelemetry.Resources.Host*/**', '!**/*.md']
          resources-process: ['*/OpenTelemetry.Resources.Process*/**', '!**/*.md']
          resources-processruntime: ['*/OpenTelemetry.Resources.ProcessRuntime*/**', '!**/*.md']
          sampler-aws: ['*/OpenTelemetry.Sampler.AWS*/**', '!**/*.md']
          semanticconventions: ['*/OpenTelemetry.SemanticConventions*/**', '!**/*.md']

  build-test-exporter-geneva:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'exporter-geneva') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Exporter.Geneva]
      code-cov-name: Exporter.Geneva

  build-test-exporter-influxdb:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'exporter-influxdb') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Exporter.InfluxDB]
      code-cov-name: Exporter.InfluxDB

  build-test-exporter-instana:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'exporter-instana') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Exporter.Instana]
      code-cov-name: Exporter.Instana

  build-test-exporter-onecollector:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'exporter-onecollector') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Exporter.OneCollector]
      code-cov-name: Exporter.OneCollector

  build-test-exporter-stackdriver:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'exporter-stackdriver') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Exporter.Stackdriver]
      code-cov-name: Exporter.Stackdriver

  build-test-extensions:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'extensions') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Extensions]
      code-cov-name: Extensions

  build-test-extensions-enrichment:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'extensions-enrichment') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Extensions.Enrichment]
      code-cov-name: Extensions.Enrichment

  build-test-instrumentation-aspnet:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-aspnet') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.AspNet]
      code-cov-name: Instrumentation.AspNet

  build-test-instrumentation-aspnetcore:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-aspnetcore') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.AspNetCore]
      code-cov-name: Instrumentation.AspNetCore

  build-test-instrumentation-aws:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-aws') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Extensions.AWS,OpenTelemetry.Instrumentation.AWS,OpenTelemetry.Instrumentation.AWSLambda]
      code-cov-name: Instrumentation.AWS

  build-test-instrumentation-cassandra:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-cassandra') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.Cassandra]
      code-cov-name: Instrumentation.Cassandra
      run-tests: false

  build-test-instrumentation-confluentkafka:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-confluentkafka') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.ConfluentKafka]
      code-cov-name: Instrumentation.ConfluentKafka

  build-test-instrumentation-elasticsearchclient:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-elasticsearchclient') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.ElasticsearchClient]
      code-cov-name: Instrumentation.ElasticsearchClient

  build-test-instrumentation-entityframeworkcore:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-entityframeworkcore') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.EntityFrameworkCore]
      code-cov-name: Instrumentation.EntityFrameworkCore

  build-test-instrumentation-eventcounters:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-eventcounters') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.EventCounters]
      code-cov-name: Instrumentation.EventCounters

  build-test-instrumentation-grpccore:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-grpccore') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.GrpcCore]
      code-cov-name: Instrumentation.GrpcCore

  build-test-instrumentation-grpcnetclient:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-grpcnetclient') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.GrpcNetClient]
      code-cov-name: Instrumentation.GrpcNetClient

  build-test-instrumentation-hangfire:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-hangfire') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.Hangfire]
      code-cov-name: Instrumentation.Hangfire

  build-test-instrumentation-http:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-http') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.Http]
      code-cov-name: Instrumentation.Http

  build-test-instrumentation-owin:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-owin') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.Owin]
      code-cov-name: Instrumentation.Owin

  build-test-instrumentation-process:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-process') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.Process]
      code-cov-name: Instrumentation.Process

  build-test-instrumentation-quartz:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-quartz') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.Quartz]
      code-cov-name: Instrumentation.Quartz

  build-test-instrumentation-runtime:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-runtime') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.Runtime]
      code-cov-name: Instrumentation.Runtime

  build-test-instrumentation-servicefabricremoting:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-servicefabricremoting') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.ServiceFabricRemoting]
      code-cov-name: Instrumentation.ServiceFabricRemoting

  build-test-instrumentation-sqlclient:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-sqlclient') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.SqlClient]
      code-cov-name: Instrumentation.SqlClient

  build-test-instrumentation-stackexchangeredis:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-stackexchangeredis') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.StackExchangeRedis]
      code-cov-name: Instrumentation.StackExchangeRedis

  build-test-instrumentation-wcf:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-wcf') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Instrumentation.Wcf]
      code-cov-name: Instrumentation.Wcf

  build-test-persistentstorage:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'persistentstorage') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.PersistentStorage.Abstractions,OpenTelemetry.PersistentStorage.FileSystem]
      code-cov-name: PersistentStorage

  build-test-resources-aws:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'resources-aws') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Resources.AWS]
      code-cov-name: Resources.AWS

  build-test-resources-azure:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'resources-azure') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Resources.Azure]
      code-cov-name: Resources.Azure

  build-test-resources-container:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'resources-container') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Resources.Container]
      code-cov-name: Resources.Container

  build-test-resources-gcp:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'resources-gcp') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Resources.Gcp]
      code-cov-name: Resources.Gcp

  build-test-resources-host:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'resources-host') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Resources.Host]
      code-cov-name: Resources.Host

  build-test-resources-process:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'resources-process') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Resources.Process]
      code-cov-name: Resources.Process

  build-test-resources-processruntime:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'resources-processruntime') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Resources.ProcessRuntime]
      code-cov-name: Resources.ProcessRuntime

  build-test-sampler-aws:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'sampler-aws') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Sampler.AWS]
      code-cov-name: Sampler.AWS

  build-test-semanticconventions:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'semanticconventions') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.SemanticConventions]
      code-cov-name: SemanticConventions
      run-tests: false

  build-test-contrib-shared-tests:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'contrib-shared-tests') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: test/OpenTelemetry.Contrib.Shared.Tests/OpenTelemetry.Contrib.Shared.Tests.csproj
      code-cov-name: Contrib.Shared.Tests

  # Integration tests
  build-test-exporter-geneva-integration:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'exporter-geneva') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/Component.BuildTest.yml
    secrets: inherit
    with:
      project-name: Component[OpenTelemetry.Exporter.Geneva]
      code-cov-name: Exporter.Geneva
      test-case-filter: CategoryName=Geneva:user_events:metrics
      test-require-elevated: true
      pack: false

  build-test-instrumentation-confluentkafka-integration:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-confluentkafka') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/integration.yml
    secrets: inherit
    with:
      job: kafka-integration-test

  build-test-instrumentation-stackexchangeredis-integration:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'instrumentation-stackexchangeredis') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    uses: ./.github/workflows/integration.yml
    secrets: inherit
    with:
      job: redis-integration-test

  build-test-exporter-onecollector-integration:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changes, 'exporter-onecollector') || contains(needs.detect-changes.outputs.changes, 'shared') || contains(needs.detect-changes.outputs.changes, 'code')
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, ubuntu-22.04 ]
        version: [ net462, net8.0 ]
        exclude:
        - os: ubuntu-22.04
          version: net462
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Setup dotnet
      uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1

    - name: dotnet restore Component.proj for OpenTelemetry.Exporter.OneCollector
      run: dotnet restore build/Projects/Component.proj -p:BUILD_COMPONENT=OpenTelemetry.Exporter.OneCollector

    - name: dotnet build Component.proj for OpenTelemetry.Exporter.OneCollector
      run: dotnet build build/Projects/Component.proj --configuration Release --no-restore -p:BUILD_COMPONENT=OpenTelemetry.Exporter.OneCollector

    - name: dotnet test Component.proj for OpenTelemetry.Exporter.OneCollector
      run: dotnet test build/Projects/Component.proj --filter CategoryName=OneCollectorIntegrationTests --framework ${{ matrix.version }} --configuration Release --no-restore --no-build -p:BUILD_COMPONENT=OpenTelemetry.Exporter.OneCollector --logger:"console;verbosity=detailed"
      env:
        OTEL_ONECOLLECTOR_INSTRUMENTATION_KEY: ${{ secrets.OTEL_ONECOLLECTOR_INSTRUMENTATION_KEY }}