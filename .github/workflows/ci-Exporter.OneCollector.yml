name: Build OpenTelemetry.Exporter.OneCollector

on:
  pull_request:
    branches: [ 'main*', 'exporter*' ]
    paths:
    - '*/OpenTelemetry.Exporter.OneCollector*/**'
    - 'build/**'
    - '!**.md'

env:
  PROJECT: OpenTelemetry.Exporter.OneCollector

jobs:
  build-test:

    strategy:
      fail-fast: false # ensures the entire test matrix is run, even if one permutation fails
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        version: [ net462, net6.0, net7.0 ]
        exclude:
        - os: ubuntu-latest
          version: net462

    env:
      OS: ${{ matrix.os }}
      TARGET_FRAMEWORK: ${{ matrix.version }}

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3

    - name: dotnet restore build/Projects/${{env.PROJECT}}.proj
      run: dotnet restore build/Projects/${{env.PROJECT}}.proj

    - name: dotnet build build/Projects/${{env.PROJECT}}.proj
      run: dotnet build build/Projects/${{env.PROJECT}}.proj --configuration Release --no-restore

    - name: dotnet test test/${{env.PROJECT}}.Tests
      run: dotnet test test/${{env.PROJECT}}.Tests --collect:"Code Coverage" --results-directory:TestResults --framework ${{ matrix.version }} --configuration Release --no-restore --no-build --logger:"console;verbosity=detailed" -- RunConfiguration.DisableAppDomain=true

    - name: Install coverage tool
      run: dotnet tool install -g dotnet-coverage

    - name: Merging test results
      run: dotnet-coverage merge -r -f cobertura -o ./TestResults/Cobertura.xml ./TestResults/*

    - uses: codecov/codecov-action@v3.1.4
      continue-on-error: true # Note: Don't fail for upload failures
      with:
        file: TestResults/Cobertura.xml
        env_vars: OS,TARGET_FRAMEWORK
        flags: Exporter.OneCollector.unittests
        name: Code Coverage for Exporter.OneCollector on [${{ matrix.os }}.${{ matrix.version }}]
