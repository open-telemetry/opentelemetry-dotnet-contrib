name: Pack OpenTelemetry.Exporter.OneCollector

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
  push:
    tags:
      - 'Exporter.OneCollector-*' # trigger when we create a tag with prefix "Exporter.OneCollector-"

jobs:
  build-test-pack:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    env:
      PROJECT: OpenTelemetry.Exporter.OneCollector

    strategy:
      matrix:
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # fetching all

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3

    - name: dotnet restore build/Projects/${{env.PROJECT}}.proj
      run: dotnet restore build/Projects/${{env.PROJECT}}.proj

    - name: dotnet build build/Projects/${{env.PROJECT}}.proj
      run: dotnet build build/Projects/${{env.PROJECT}}.proj --configuration Release --no-restore -p:Deterministic=true

    - name: dotnet test test/${{env.PROJECT}}.Tests
      run: dotnet test test/${{env.PROJECT}}.Tests --configuration Release --no-restore --no-build --logger:"console;verbosity=detailed"
      env:
        OTEL_ONECOLLECTOR_INSTRUMENTATION_KEY: ${{ secrets.OTEL_ONECOLLECTOR_INSTRUMENTATION_KEY }}

    - name: dotnet pack build/Projects/${{env.PROJECT}}.proj
      run: dotnet pack build/Projects/${{env.PROJECT}}.proj --configuration Release --no-build --no-restore

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.PROJECT}}-packages
        path: '**/${{env.PROJECT}}/bin/**/*.*nupkg'

    - name: Publish Nuget
      run: |
        nuget push **/${{env.PROJECT}}/bin/**/*.nupkg -Source https://api.nuget.org/v3/index.json -ApiKey ${{ secrets.NUGET_TOKEN }} -SymbolApiKey ${{ secrets.NUGET_TOKEN }}

    - name: Create GitHub Prerelease
      if: ${{ (contains(github.ref_name, '-alpha.') || contains(github.ref_name, '-beta.') || contains(github.ref_name, '-rc.')) }}
      run: gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --verify-tag --notes "See [CHANGELOG](https://github.com/open-telemetry/opentelemetry-dotnet-contrib/blob/${{ github.ref_name }}/src/${{env.PROJECT}}/CHANGELOG.md) for details." --prerelease
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      if: ${{ !(contains(github.ref_name, '-alpha.') || contains(github.ref_name, '-beta.') || contains(github.ref_name, '-rc.')) }}
      run: gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --verify-tag --notes "See [CHANGELOG](https://github.com/open-telemetry/opentelemetry-dotnet-contrib/blob/${{ github.ref_name }}/src/${{env.PROJECT}}/CHANGELOG.md) for details." --latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
